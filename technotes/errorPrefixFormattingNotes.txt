

'textformattercollection.go'








- With Tabs
//	 errorPrefix                interface{}
//
//		This object encapsulates error prefix text which
//		is included in all returned error messages.
//		Usually, it	contains the name of the calling
//		method or methods listed as a method or function
//		chain of execution.
//
//		If no error prefix information is needed, set this
//		parameter to 'nil'.
//
//		This empty interface must be convertible to one of
//		the following types:
//
//		1.	nil
//				A nil value is valid and generates an
//				empty collection of error prefix and
//				error context information.
//
//		2.	string
//				A string containing error prefix
//				information.
//
//		3. []string
//				A one-dimensional slice of strings
//				containing error prefix information.
//
//		4. [][2]string
//				A two-dimensional slice of strings
//		   		containing error prefix and error
//		   		context information.
//
//		5. ErrPrefixDto
//				An instance of ErrPrefixDto.
//				Information from this object will
//				be copied for use in error and
//				informational messages.
//
//		6. *ErrPrefixDto
//				A pointer to an instance of
//				ErrPrefixDto. Information from
//				this object will be copied for use
//				in error and informational messages.
//
//		7. IBasicErrorPrefix
//				An interface to a method
//				generating a two-dimensional slice
//				of strings containing error prefix
//				and error context information.
//
//		If parameter 'errorPrefix' is NOT convertible
//		to one of the valid types listed above, it will
//		be considered invalid and trigger the return of
//		an error.
//
//		Types ErrPrefixDto and IBasicErrorPrefix are
//		included in the 'errpref' software package:
//			"github.com/MikeAustin71/errpref".

- Error Return with Tabs
//
//	err							error
//
//		If this method completes successfully and no errors
//		are encountered this return value is set to 'nil'.
//		Otherwise, if errors are encountered, this return
//		value will contain an appropriate error message.
//
//		If an error message is returned, the text value of
//		input parameter 'errorPrefix' will be inserted or
//		prefixed at	the beginning of the error message.


- Subsidiary Error with Tabs


- Number Sign Comment Notes:
//
//	numberSign					NumericSignValueType
//
//		The Number Sign is specified by means of a
//		NumericSignValueType enumeration value.
//
//		Possible values are listed as follows:
//
//			NumSignVal.None()     = -2 - Invalid Value
//			NumSignVal.Negative() = -1 - Valid Value
//			NumSignVal.Zero()     =  0 - Valid Value
//			NumSignVal.Positive() =  1 - Valid Value
//
//		If 'numberSign' is set to an invalid value or if
//		'numberSign' is set to NumSignVal.Zero() for a
//		non-zero numeric value, an error will be returned.
//
//		If parameter 'numericValue' includes a signed numeric
//		value, parameter 'numberSign' will override that
//		designation.


