SplitFunc is the signature of the split function used to tokenize the[EOL]input. The arguments are an initial substring of the remaining unprocessed[EOL]data and a flag, atEOF, that reports whether the Reader has no more data[EOL]to give. The return values are the number of bytes to advance the input[EOL]and the next token to return to the user, if any, plus an error, if any.[EOL][EOL]Scanning stops if the function returns an error, in which case some of[EOL]the input may be discarded. If that error is ErrFinalToken, scanning[EOL]stops with no error.[EOL][EOL]Otherwise, the Scanner advances the input. If the token is not nil,[EOL]the Scanner returns it to the user. If the token is nil, the[EOL]Scanner reads more data and continues scanning; if there is no more[EOL]data--if atEOF was true--the Scanner returns. If the data does not[EOL]yet hold a complete token, for instance if it has no newline while[EOL]scanning lines, a SplitFunc can return (0, nil, nil) to signal the[EOL]Scanner to read more data into the slice and try again with a[EOL]longer slice starting at the same point in the input.[EOL][EOL]The function is never called with an empty data slice unless atEOF[EOL]is true. If atEOF is true, however, data may be non-empty and,[EOL]as always, holds unprocessed text.[EOL][EOL]